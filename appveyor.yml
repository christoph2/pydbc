version: 1.0.{build}

environment:

  matrix:

    # For Python versions available on Appveyor, see
    # http://www.appveyor.com/docs/installed-software#python
    # The list here is complete (excluding Python 2.6, which
    # isn't covered by this document) at the time of writing.

    - PYTHON: "C:\\Python35"
      #- PYTHON: "C:\\Python34"
    - PYTHON: "C:\\Python36"
      #- PYTHON: "C:\\Python34-x64"
    - PYTHON: "C:\\Python35-x64"
    - PYTHON: "C:\\Python36-x64"

install:
  # We need wheel installed to build wheels
  - cmd: set PATH=%PATH%;%PYTHON%\Scripts
  - "%PYTHON%\\python.exe -m pip install --upgrade pip"
  - "%PYTHON%\\python.exe -m pip install wheel"
  - "%PYTHON%\\python.exe -m pip install -r requirements_testings.txt"
  - "%PYTHON%\\python.exe -m pip install pytest-cov coverage coveralls codacy-coverage"
  - cmd: curl -O https://www.antlr.org/download/antlr-4.7.2-complete.jar
  - cmd: set CLASSPATH = "%APPVEYOR_BUILD_FOLDER%\antlr-4.7.2-complete.jar"
  - cmd: set CLASSPATH
  - cmd: dir
  - cmd: cd pydbc
  - cmd: java -jar ..\antlr-4.7.2-complete.jar -Dlanguage=Python3 -long-messages -visitor dbc.g4 -o ./py3/
  - cmd: java -jar ..\antlr-4.7.2-complete.jar -Dlanguage=Python3 -long-messages -visitor ncf.g4 -o ./py3/
  - cmd: java -jar ..\antlr-4.7.2-complete.jar -Dlanguage=Python3 -long-messages -visitor ldf.g4 -o ./py3/
  - cmd: cd ..


build: off
    #  mode: Script
    # verbosity: normal

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python evrsion you want to use on PATH.
  - "%PYTHON%\\python.exe setup.py test"
  #- "%PYTHON%\\scripts\\coveralls"
  #- "%PYTHON%\\scripts\\coverage xml"
  #- "%PYTHON%\\scripts\\python-codacy-coverage -r coverage.xml"


after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  -  "%PYTHON%\\python.exe setup.py bdist_wheel"
  -  "%PYTHON%\\python.exe setup.py sdist --formats=zip,gztar"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
#  access your wheels from the Appveyor "artifacts" tab for your build.

#deploy:
#- provider: GitHub
#  artifact: '*.*'
#  description: Test release -- do not use
#  auth_token:
#    secure: Wiweaot1JAHzV9mMZ3Zhn/5XUuLe5XYAyfpRZmWNpLW7fMW1FhAdoRliiAhz3Sv6
#  draft: false
#  prerelease: true

