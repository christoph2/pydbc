# Generated from dbc.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,56,605,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,
        1,2,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,
        1,4,1,4,1,5,1,5,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,
        1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,13,
        1,13,1,13,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,
        1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,
        1,18,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,
        1,21,1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,22,
        1,22,1,23,1,23,1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,
        1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,
        1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,
        1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,28,1,28,
        1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,1,29,
        1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,
        1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,1,31,
        1,31,1,31,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,1,32,
        1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,1,33,
        1,33,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,
        1,34,1,34,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,
        1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,36,1,37,
        1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,37,
        1,37,1,37,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,1,38,
        1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,1,40,
        1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,
        1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,
        1,42,1,42,1,42,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,
        1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,
        1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,49,1,49,1,49,1,49,1,49,1,49,
        1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,
        4,49,505,8,49,11,49,12,49,506,1,50,1,50,5,50,511,8,50,10,50,12,50,
        514,9,50,1,51,1,51,3,51,518,8,51,1,51,4,51,521,8,51,11,51,12,51,
        522,1,52,3,52,526,8,52,1,52,4,52,529,8,52,11,52,12,52,530,1,52,1,
        52,5,52,535,8,52,10,52,12,52,538,9,52,1,52,3,52,541,8,52,1,52,1,
        52,4,52,545,8,52,11,52,12,52,546,1,52,3,52,550,8,52,1,52,4,52,553,
        8,52,11,52,12,52,554,1,52,3,52,558,8,52,1,53,3,53,561,8,53,1,53,
        4,53,564,8,53,11,53,12,53,565,1,54,1,54,1,54,1,54,1,55,1,55,1,56,
        1,56,1,56,5,56,577,8,56,10,56,12,56,580,9,56,1,56,1,56,1,57,1,57,
        1,57,1,57,1,57,3,57,589,8,57,1,58,1,58,1,58,1,58,1,58,3,58,596,8,
        58,3,58,598,8,58,3,58,600,8,58,3,58,602,8,58,1,59,1,59,0,0,60,1,
        1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,
        14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,
        25,51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,
        36,73,37,75,38,77,39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,
        47,95,48,97,49,99,50,101,51,103,0,105,52,107,53,109,54,111,0,113,
        55,115,0,117,0,119,56,1,0,8,3,0,65,90,95,95,97,122,4,0,48,57,65,
        90,95,95,97,122,2,0,69,69,101,101,2,0,43,43,45,45,3,0,9,10,13,13,
        32,32,3,0,48,57,65,70,97,102,2,0,34,34,92,92,8,0,34,34,39,39,92,
        92,98,98,102,102,110,110,114,114,116,116,624,0,1,1,0,0,0,0,3,1,0,
        0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,
        0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
        0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,
        0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,
        0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,
        0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,
        0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,
        0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,
        0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,
        0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,105,1,0,
        0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,113,1,0,0,0,0,119,1,0,0,0,1,121,
        1,0,0,0,3,131,1,0,0,0,5,133,1,0,0,0,7,135,1,0,0,0,9,148,1,0,0,0,
        11,152,1,0,0,0,13,156,1,0,0,0,15,158,1,0,0,0,17,160,1,0,0,0,19,162,
        1,0,0,0,21,164,1,0,0,0,23,166,1,0,0,0,25,168,1,0,0,0,27,170,1,0,
        0,0,29,181,1,0,0,0,31,185,1,0,0,0,33,189,1,0,0,0,35,193,1,0,0,0,
        37,202,1,0,0,0,39,206,1,0,0,0,41,214,1,0,0,0,43,218,1,0,0,0,45,223,
        1,0,0,0,47,232,1,0,0,0,49,237,1,0,0,0,51,244,1,0,0,0,53,256,1,0,
        0,0,55,265,1,0,0,0,57,278,1,0,0,0,59,286,1,0,0,0,61,298,1,0,0,0,
        63,313,1,0,0,0,65,324,1,0,0,0,67,338,1,0,0,0,69,349,1,0,0,0,71,366,
        1,0,0,0,73,378,1,0,0,0,75,386,1,0,0,0,77,402,1,0,0,0,79,413,1,0,
        0,0,81,424,1,0,0,0,83,435,1,0,0,0,85,447,1,0,0,0,87,455,1,0,0,0,
        89,459,1,0,0,0,91,463,1,0,0,0,93,467,1,0,0,0,95,473,1,0,0,0,97,480,
        1,0,0,0,99,485,1,0,0,0,101,508,1,0,0,0,103,515,1,0,0,0,105,525,1,
        0,0,0,107,560,1,0,0,0,109,567,1,0,0,0,111,571,1,0,0,0,113,573,1,
        0,0,0,115,583,1,0,0,0,117,590,1,0,0,0,119,603,1,0,0,0,121,122,5,
        66,0,0,122,123,5,79,0,0,123,124,5,95,0,0,124,125,5,84,0,0,125,126,
        5,88,0,0,126,127,5,95,0,0,127,128,5,66,0,0,128,129,5,85,0,0,129,
        130,5,95,0,0,130,2,1,0,0,0,131,132,5,58,0,0,132,4,1,0,0,0,133,134,
        5,59,0,0,134,6,1,0,0,0,135,136,5,83,0,0,136,137,5,73,0,0,137,138,
        5,71,0,0,138,139,5,95,0,0,139,140,5,86,0,0,140,141,5,65,0,0,141,
        142,5,76,0,0,142,143,5,84,0,0,143,144,5,89,0,0,144,145,5,80,0,0,
        145,146,5,69,0,0,146,147,5,95,0,0,147,8,1,0,0,0,148,149,5,66,0,0,
        149,150,5,79,0,0,150,151,5,95,0,0,151,10,1,0,0,0,152,153,5,83,0,
        0,153,154,5,71,0,0,154,155,5,95,0,0,155,12,1,0,0,0,156,157,5,124,
        0,0,157,14,1,0,0,0,158,159,5,64,0,0,159,16,1,0,0,0,160,161,5,40,
        0,0,161,18,1,0,0,0,162,163,5,44,0,0,163,20,1,0,0,0,164,165,5,41,
        0,0,165,22,1,0,0,0,166,167,5,91,0,0,167,24,1,0,0,0,168,169,5,93,
        0,0,169,26,1,0,0,0,170,171,5,86,0,0,171,172,5,65,0,0,172,173,5,76,
        0,0,173,174,5,95,0,0,174,175,5,84,0,0,175,176,5,65,0,0,176,177,5,
        66,0,0,177,178,5,76,0,0,178,179,5,69,0,0,179,180,5,95,0,0,180,28,
        1,0,0,0,181,182,5,66,0,0,182,183,5,85,0,0,183,184,5,95,0,0,184,30,
        1,0,0,0,185,186,5,66,0,0,186,187,5,83,0,0,187,188,5,95,0,0,188,32,
        1,0,0,0,189,190,5,78,0,0,190,191,5,83,0,0,191,192,5,95,0,0,192,34,
        1,0,0,0,193,194,5,78,0,0,194,195,5,83,0,0,195,196,5,95,0,0,196,197,
        5,68,0,0,197,198,5,69,0,0,198,199,5,83,0,0,199,200,5,67,0,0,200,
        201,5,95,0,0,201,36,1,0,0,0,202,203,5,67,0,0,203,204,5,77,0,0,204,
        205,5,95,0,0,205,38,1,0,0,0,206,207,5,66,0,0,207,208,5,65,0,0,208,
        209,5,95,0,0,209,210,5,68,0,0,210,211,5,69,0,0,211,212,5,70,0,0,
        212,213,5,95,0,0,213,40,1,0,0,0,214,215,5,66,0,0,215,216,5,65,0,
        0,216,217,5,95,0,0,217,42,1,0,0,0,218,219,5,86,0,0,219,220,5,65,
        0,0,220,221,5,76,0,0,221,222,5,95,0,0,222,44,1,0,0,0,223,224,5,67,
        0,0,224,225,5,65,0,0,225,226,5,84,0,0,226,227,5,95,0,0,227,228,5,
        68,0,0,228,229,5,69,0,0,229,230,5,70,0,0,230,231,5,95,0,0,231,46,
        1,0,0,0,232,233,5,67,0,0,233,234,5,65,0,0,234,235,5,84,0,0,235,236,
        5,95,0,0,236,48,1,0,0,0,237,238,5,70,0,0,238,239,5,73,0,0,239,240,
        5,76,0,0,240,241,5,84,0,0,241,242,5,69,0,0,242,243,5,82,0,0,243,
        50,1,0,0,0,244,245,5,66,0,0,245,246,5,65,0,0,246,247,5,95,0,0,247,
        248,5,68,0,0,248,249,5,69,0,0,249,250,5,70,0,0,250,251,5,95,0,0,
        251,252,5,68,0,0,252,253,5,69,0,0,253,254,5,70,0,0,254,255,5,95,
        0,0,255,52,1,0,0,0,256,257,5,69,0,0,257,258,5,86,0,0,258,259,5,95,
        0,0,259,260,5,68,0,0,260,261,5,65,0,0,261,262,5,84,0,0,262,263,5,
        65,0,0,263,264,5,95,0,0,264,54,1,0,0,0,265,266,5,69,0,0,266,267,
        5,78,0,0,267,268,5,86,0,0,268,269,5,86,0,0,269,270,5,65,0,0,270,
        271,5,82,0,0,271,272,5,95,0,0,272,273,5,68,0,0,273,274,5,65,0,0,
        274,275,5,84,0,0,275,276,5,65,0,0,276,277,5,95,0,0,277,56,1,0,0,
        0,278,279,5,83,0,0,279,280,5,71,0,0,280,281,5,84,0,0,281,282,5,89,
        0,0,282,283,5,80,0,0,283,284,5,69,0,0,284,285,5,95,0,0,285,58,1,
        0,0,0,286,287,5,83,0,0,287,288,5,71,0,0,288,289,5,84,0,0,289,290,
        5,89,0,0,290,291,5,80,0,0,291,292,5,69,0,0,292,293,5,95,0,0,293,
        294,5,86,0,0,294,295,5,65,0,0,295,296,5,76,0,0,296,297,5,95,0,0,
        297,60,1,0,0,0,298,299,5,66,0,0,299,300,5,65,0,0,300,301,5,95,0,
        0,301,302,5,68,0,0,302,303,5,69,0,0,303,304,5,70,0,0,304,305,5,95,
        0,0,305,306,5,83,0,0,306,307,5,71,0,0,307,308,5,84,0,0,308,309,5,
        89,0,0,309,310,5,80,0,0,310,311,5,69,0,0,311,312,5,95,0,0,312,62,
        1,0,0,0,313,314,5,66,0,0,314,315,5,65,0,0,315,316,5,95,0,0,316,317,
        5,83,0,0,317,318,5,71,0,0,318,319,5,84,0,0,319,320,5,89,0,0,320,
        321,5,80,0,0,321,322,5,69,0,0,322,323,5,95,0,0,323,64,1,0,0,0,324,
        325,5,83,0,0,325,326,5,73,0,0,326,327,5,71,0,0,327,328,5,95,0,0,
        328,329,5,84,0,0,329,330,5,89,0,0,330,331,5,80,0,0,331,332,5,69,
        0,0,332,333,5,95,0,0,333,334,5,82,0,0,334,335,5,69,0,0,335,336,5,
        70,0,0,336,337,5,95,0,0,337,66,1,0,0,0,338,339,5,83,0,0,339,340,
        5,73,0,0,340,341,5,71,0,0,341,342,5,95,0,0,342,343,5,71,0,0,343,
        344,5,82,0,0,344,345,5,79,0,0,345,346,5,85,0,0,346,347,5,80,0,0,
        347,348,5,95,0,0,348,68,1,0,0,0,349,350,5,83,0,0,350,351,5,73,0,
        0,351,352,5,71,0,0,352,353,5,84,0,0,353,354,5,89,0,0,354,355,5,80,
        0,0,355,356,5,69,0,0,356,357,5,95,0,0,357,358,5,86,0,0,358,359,5,
        65,0,0,359,360,5,76,0,0,360,361,5,84,0,0,361,362,5,89,0,0,362,363,
        5,80,0,0,363,364,5,69,0,0,364,365,5,95,0,0,365,70,1,0,0,0,366,367,
        5,66,0,0,367,368,5,65,0,0,368,369,5,95,0,0,369,370,5,68,0,0,370,
        371,5,69,0,0,371,372,5,70,0,0,372,373,5,95,0,0,373,374,5,82,0,0,
        374,375,5,69,0,0,375,376,5,76,0,0,376,377,5,95,0,0,377,72,1,0,0,
        0,378,379,5,66,0,0,379,380,5,65,0,0,380,381,5,95,0,0,381,382,5,82,
        0,0,382,383,5,69,0,0,383,384,5,76,0,0,384,385,5,95,0,0,385,74,1,
        0,0,0,386,387,5,66,0,0,387,388,5,65,0,0,388,389,5,95,0,0,389,390,
        5,68,0,0,390,391,5,69,0,0,391,392,5,70,0,0,392,393,5,95,0,0,393,
        394,5,68,0,0,394,395,5,69,0,0,395,396,5,70,0,0,396,397,5,95,0,0,
        397,398,5,82,0,0,398,399,5,69,0,0,399,400,5,76,0,0,400,401,5,95,
        0,0,401,76,1,0,0,0,402,403,5,66,0,0,403,404,5,85,0,0,404,405,5,95,
        0,0,405,406,5,83,0,0,406,407,5,71,0,0,407,408,5,95,0,0,408,409,5,
        82,0,0,409,410,5,69,0,0,410,411,5,76,0,0,411,412,5,95,0,0,412,78,
        1,0,0,0,413,414,5,66,0,0,414,415,5,85,0,0,415,416,5,95,0,0,416,417,
        5,69,0,0,417,418,5,86,0,0,418,419,5,95,0,0,419,420,5,82,0,0,420,
        421,5,69,0,0,421,422,5,76,0,0,422,423,5,95,0,0,423,80,1,0,0,0,424,
        425,5,66,0,0,425,426,5,85,0,0,426,427,5,95,0,0,427,428,5,66,0,0,
        428,429,5,79,0,0,429,430,5,95,0,0,430,431,5,82,0,0,431,432,5,69,
        0,0,432,433,5,76,0,0,433,434,5,95,0,0,434,82,1,0,0,0,435,436,5,83,
        0,0,436,437,5,71,0,0,437,438,5,95,0,0,438,439,5,77,0,0,439,440,5,
        85,0,0,440,441,5,76,0,0,441,442,5,95,0,0,442,443,5,86,0,0,443,444,
        5,65,0,0,444,445,5,76,0,0,445,446,5,95,0,0,446,84,1,0,0,0,447,448,
        5,86,0,0,448,449,5,69,0,0,449,450,5,82,0,0,450,451,5,83,0,0,451,
        452,5,73,0,0,452,453,5,79,0,0,453,454,5,78,0,0,454,86,1,0,0,0,455,
        456,5,69,0,0,456,457,5,86,0,0,457,458,5,95,0,0,458,88,1,0,0,0,459,
        460,5,73,0,0,460,461,5,78,0,0,461,462,5,84,0,0,462,90,1,0,0,0,463,
        464,5,72,0,0,464,465,5,69,0,0,465,466,5,88,0,0,466,92,1,0,0,0,467,
        468,5,70,0,0,468,469,5,76,0,0,469,470,5,79,0,0,470,471,5,65,0,0,
        471,472,5,84,0,0,472,94,1,0,0,0,473,474,5,83,0,0,474,475,5,84,0,
        0,475,476,5,82,0,0,476,477,5,73,0,0,477,478,5,78,0,0,478,479,5,71,
        0,0,479,96,1,0,0,0,480,481,5,69,0,0,481,482,5,78,0,0,482,483,5,85,
        0,0,483,484,5,77,0,0,484,98,1,0,0,0,485,486,5,68,0,0,486,487,5,85,
        0,0,487,488,5,77,0,0,488,489,5,77,0,0,489,490,5,89,0,0,490,491,5,
        95,0,0,491,492,5,78,0,0,492,493,5,79,0,0,493,494,5,68,0,0,494,495,
        5,69,0,0,495,496,5,95,0,0,496,497,5,86,0,0,497,498,5,69,0,0,498,
        499,5,67,0,0,499,500,5,84,0,0,500,501,5,79,0,0,501,502,5,82,0,0,
        502,504,1,0,0,0,503,505,2,48,57,0,504,503,1,0,0,0,505,506,1,0,0,
        0,506,504,1,0,0,0,506,507,1,0,0,0,507,100,1,0,0,0,508,512,7,0,0,
        0,509,511,7,1,0,0,510,509,1,0,0,0,511,514,1,0,0,0,512,510,1,0,0,
        0,512,513,1,0,0,0,513,102,1,0,0,0,514,512,1,0,0,0,515,517,7,2,0,
        0,516,518,7,3,0,0,517,516,1,0,0,0,517,518,1,0,0,0,518,520,1,0,0,
        0,519,521,2,48,57,0,520,519,1,0,0,0,521,522,1,0,0,0,522,520,1,0,
        0,0,522,523,1,0,0,0,523,104,1,0,0,0,524,526,3,119,59,0,525,524,1,
        0,0,0,525,526,1,0,0,0,526,557,1,0,0,0,527,529,2,48,57,0,528,527,
        1,0,0,0,529,530,1,0,0,0,530,528,1,0,0,0,530,531,1,0,0,0,531,532,
        1,0,0,0,532,536,5,46,0,0,533,535,2,48,57,0,534,533,1,0,0,0,535,538,
        1,0,0,0,536,534,1,0,0,0,536,537,1,0,0,0,537,540,1,0,0,0,538,536,
        1,0,0,0,539,541,3,103,51,0,540,539,1,0,0,0,540,541,1,0,0,0,541,558,
        1,0,0,0,542,544,5,46,0,0,543,545,2,48,57,0,544,543,1,0,0,0,545,546,
        1,0,0,0,546,544,1,0,0,0,546,547,1,0,0,0,547,549,1,0,0,0,548,550,
        3,103,51,0,549,548,1,0,0,0,549,550,1,0,0,0,550,558,1,0,0,0,551,553,
        2,48,57,0,552,551,1,0,0,0,553,554,1,0,0,0,554,552,1,0,0,0,554,555,
        1,0,0,0,555,556,1,0,0,0,556,558,3,103,51,0,557,528,1,0,0,0,557,542,
        1,0,0,0,557,552,1,0,0,0,558,106,1,0,0,0,559,561,3,119,59,0,560,559,
        1,0,0,0,560,561,1,0,0,0,561,563,1,0,0,0,562,564,2,48,57,0,563,562,
        1,0,0,0,564,565,1,0,0,0,565,563,1,0,0,0,565,566,1,0,0,0,566,108,
        1,0,0,0,567,568,7,4,0,0,568,569,1,0,0,0,569,570,6,54,0,0,570,110,
        1,0,0,0,571,572,7,5,0,0,572,112,1,0,0,0,573,578,5,34,0,0,574,577,
        3,115,57,0,575,577,8,6,0,0,576,574,1,0,0,0,576,575,1,0,0,0,577,580,
        1,0,0,0,578,576,1,0,0,0,578,579,1,0,0,0,579,581,1,0,0,0,580,578,
        1,0,0,0,581,582,5,34,0,0,582,114,1,0,0,0,583,588,5,92,0,0,584,589,
        7,7,0,0,585,589,3,117,58,0,586,589,9,0,0,0,587,589,5,0,0,1,588,584,
        1,0,0,0,588,585,1,0,0,0,588,586,1,0,0,0,588,587,1,0,0,0,589,116,
        1,0,0,0,590,601,5,117,0,0,591,599,3,111,55,0,592,597,3,111,55,0,
        593,595,3,111,55,0,594,596,3,111,55,0,595,594,1,0,0,0,595,596,1,
        0,0,0,596,598,1,0,0,0,597,593,1,0,0,0,597,598,1,0,0,0,598,600,1,
        0,0,0,599,592,1,0,0,0,599,600,1,0,0,0,600,602,1,0,0,0,601,591,1,
        0,0,0,601,602,1,0,0,0,602,118,1,0,0,0,603,604,7,3,0,0,604,120,1,
        0,0,0,22,0,506,512,517,522,525,530,536,540,546,549,554,557,560,565,
        576,578,588,595,597,599,601,1,6,0,0
    ]

class dbcLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    T__26 = 27
    T__27 = 28
    T__28 = 29
    T__29 = 30
    T__30 = 31
    T__31 = 32
    T__32 = 33
    T__33 = 34
    T__34 = 35
    T__35 = 36
    T__36 = 37
    T__37 = 38
    T__38 = 39
    T__39 = 40
    T__40 = 41
    T__41 = 42
    T__42 = 43
    T__43 = 44
    T__44 = 45
    T__45 = 46
    T__46 = 47
    T__47 = 48
    T__48 = 49
    DUMMY_NODE_VECTOR = 50
    C_IDENTIFIER = 51
    FLOAT = 52
    INT = 53
    WS = 54
    STRING = 55
    SIGN = 56

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'BO_TX_BU_'", "':'", "';'", "'SIG_VALTYPE_'", "'BO_'", "'SG_'", 
            "'|'", "'@'", "'('", "','", "')'", "'['", "']'", "'VAL_TABLE_'", 
            "'BU_'", "'BS_'", "'NS_'", "'NS_DESC_'", "'CM_'", "'BA_DEF_'", 
            "'BA_'", "'VAL_'", "'CAT_DEF_'", "'CAT_'", "'FILTER'", "'BA_DEF_DEF_'", 
            "'EV_DATA_'", "'ENVVAR_DATA_'", "'SGTYPE_'", "'SGTYPE_VAL_'", 
            "'BA_DEF_SGTYPE_'", "'BA_SGTYPE_'", "'SIG_TYPE_REF_'", "'SIG_GROUP_'", 
            "'SIGTYPE_VALTYPE_'", "'BA_DEF_REL_'", "'BA_REL_'", "'BA_DEF_DEF_REL_'", 
            "'BU_SG_REL_'", "'BU_EV_REL_'", "'BU_BO_REL_'", "'SG_MUL_VAL_'", 
            "'VERSION'", "'EV_'", "'INT'", "'HEX'", "'FLOAT'", "'STRING'", 
            "'ENUM'" ]

    symbolicNames = [ "<INVALID>",
            "DUMMY_NODE_VECTOR", "C_IDENTIFIER", "FLOAT", "INT", "WS", "STRING", 
            "SIGN" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", 
                  "T__32", "T__33", "T__34", "T__35", "T__36", "T__37", 
                  "T__38", "T__39", "T__40", "T__41", "T__42", "T__43", 
                  "T__44", "T__45", "T__46", "T__47", "T__48", "DUMMY_NODE_VECTOR", 
                  "C_IDENTIFIER", "EXPONENT", "FLOAT", "INT", "WS", "HEX_DIGIT", 
                  "STRING", "ESC_SEQ", "UNICODE_ESC", "SIGN" ]

    grammarFileName = "dbc.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


