VERSION ""


NS_ : 
	NS_DESC_
	CM_
	BA_DEF_
	BA_
	VAL_
	CAT_DEF_
	CAT_
	FILTER
	BA_DEF_DEF_
	EV_DATA_
	ENVVAR_DATA_
	SGTYPE_
	SGTYPE_VAL_
	BA_DEF_SGTYPE_
	BA_SGTYPE_
	SIG_TYPE_REF_
	VAL_TABLE_
	SIG_GROUP_
	SIG_VALTYPE_
	SIGTYPE_VALTYPE_
	BO_TX_BU_
	BA_DEF_REL_
	BA_REL_
	BA_DEF_DEF_REL_
	BU_SG_REL_
	BU_EV_REL_
	BU_BO_REL_
	SG_MUL_VAL_

BS_:

BU_: ${' '.join(db.nodeNames)}
%for vt in db.valueTables():
VAL_TABLE_ ${vt['Name']} \
%for desc in db.valueDescription(vt['DB_ID']):
${int(desc['Value'])} ${desc['Value_Description']} \
%endfor
;
%endfor


%for msg in db.messages():
BO_ ${msg['Message_ID']} ${msg['Name']}: ${msg['DLC']} ${db.nodeName(msg['Sender'])}
%for signal in db.signals(msg['DB_ID']):
 SG_ ${signal['Name']} : ${signal['Offset']}|${signal['Bitsize']}@${signal['Byteorder']}${"-" if signal['Valuetype'] == -1 else "+"} \
(${"{:.12G}".format(signal['Formula_Factor'])},${"{:.12G}".format(signal['Formula_Offset'])}) [${"{:.12G}".format(signal['Minimum'])}|\
${"{:.12G}".format(signal['Maximum'])}] ${signal['Unit']} ${' '.join(db.fetchSignalReceivers(msg['DB_ID'], signal['DB_ID']))}
%endfor

%endfor


%for comment in db.comments():
CM_ \
%if comment['type'] == 'BO':
BO_ ${comment['k0']} ${comment['comment']};
%elif comment['type'] == 'SG':
SG_ ${comment['k0']} ${comment['k1']} ${comment['comment']};
%endif
%endfor

